% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group_feature_methods.R
\name{featureGroupSpectra}
\alias{featureGroupSpectra}
\alias{featureGroupPseudoSpectrum}
\alias{featureGroupFullScan}
\title{Extract spectra for feature groups}
\usage{
featureGroupSpectra(
  x,
  featureGroup = featureGroups(x),
  FUN = featureGroupPseudoSpectrum,
  value = "maxo",
  filled = TRUE,
  subset = seq_along(fileNames(x)),
  ...
)

featureGroupPseudoSpectrum(
  featureGroup = character(),
  x,
  fvals = featureValues(x),
  n = ncol(fvals),
  intensityFun = median,
  ...
)

featureGroupFullScan(
  featureGroup = character(),
  x,
  fvals = featureValues(x),
  ...
)
}
\arguments{
\item{x}{\code{\link[=XCMSnExp]{XCMSnExp()}} object with available \code{featureGroups()}.}

\item{featureGroup}{\code{character} with the IDs of the feature group(s) for
which the spectra should be returned. Defaults to all feature groups
defined in \code{x}. Only \code{featureGroupSpectra} supports
\code{length(featureGroup)} to be of length > 1.}

\item{FUN}{\code{function} to be used to define the spectrum for each feature
group. Can be \code{featureGroupPseudoSpectrum}, \code{featureGroupFullScan} or
any function taking parameters \code{featureGroup}, \code{x}, \code{fvals}.}

\item{value}{\code{character(1)} specifying the column in \code{chromPeaks} matrix to
be used as \emph{feature values} for each feature. This parameter is passed
to the \code{\link[=featureValues]{featureValues()}} call.}

\item{filled}{for \code{featureGroupPseudoSpectra}: \code{logical(1)} whether
filled-in values should also be considered. See \code{\link[=featureValues]{featureValues()}} for
details.}

\item{subset}{\code{integer} with indices of specific samples if spectra should
only be defined on a subset of samples. See description section for
details.}

\item{...}{additional parameters passed down to the function specifyed with
\code{FUN}.}

\item{fvals}{for \code{featureGroupPseudoSpectra} and \code{featureGroupFullScan}:
\code{matrix} with feature values (rows being features and columns samples)
such as returned by \code{\link[=featureValues]{featureValues()}}.}

\item{n}{for \code{featureGroupPseudoSpectra}: \code{integer(1)} defining the \emph{top n}
samples (in \code{subset}) on which spectra should be defined. Samples are
ordered based on the sum of signal (defined by parameter \code{value}) from
the features of each feature group. See description section for more
details.}

\item{intensityFun}{for \code{featureGroupPseudoSpectra}: \code{function} that should
be applied across samples (defined by \code{subset}) of the feature value
matrix to calculate the intensity for each mass peak of the returned
pseudo spectrum. By default (\code{intensityFun = median}) the median
intensity of a feature across all samples (defined by \code{subset} and \code{n})
is used. See description section for examples.}
}
\value{
for \code{featureGroupSpectra}: \code{MSpectra} object of length equal to the
number of feature groups in \code{x} and each element being one spectrum.
For all other functions: a \code{Spectrum} object.
}
\description{
\code{featureGroupSpectra} allows to extract a \code{Spectrum} object for each feature
group in \code{x}. Based on the specified function \code{FUN} different \emph{types} of
spectra can be returned:
\itemize{
\item \code{featureGroupPseudoSpectrum} creates a \emph{pseudo} spectrum based on the
feature values (defined by \code{value}) of all features within a feature group
(i.e. each feature is represented as a mass peak in the resulting
spectrum). The reported m/z values will be the \code{"mzmed"} of the respective
feature from the \code{\link[=featureDefinitions]{featureDefinitions()}} data frame. The associated
intensity is calculated from the values of the features from the feature
group: by default, for each feature, the median intensity across all
samples part of \code{subset} is reported. Parameters \code{value} and \code{filled} are
passed to the internal call to \code{\link[=featureValues]{featureValues()}} that returns the features'
values which are used in these calculations. Parameter \code{n} allows to
further restrict the samples being considered in the calculations: for each
feature group samples are first ordered by the sum of signal of the
features of the group and then only the \emph{top n} samples are used in the
calculations.

Examples:
To report the mean intensity of each feature in the 10 samples with the
highest signal for the feature group use \code{n = 10} and
\code{intensityFun = mean}. The m/z values reported in the \code{Spectrum} object
of a feature group will be the \code{"mzmed"} of the features, the intensity
values the mean intensity (\code{value = "maxo"}) across the 10 samples with
the highest signal for that feature group.

To report the maximal intensity (\code{value = "maxo"} of each feature in
samples 1, 4, 8 and 10 use \code{subset = c(1, 4, 8, 10)} and
\code{intensityFun = max}. More examples in the examples section.
\item \code{featureGroupFullScan}: reports the full MS1 spectrum (full scan) in the
sample with the highest total signal (defined by \code{value}) for the feature
group at the retention time closest to the median \code{"rtmed"} across all
features of the feature group.
}
}
\examples{

## Load test data set from xcms
library(xcms)
data(faahko_sub)
## Update the path to the files for the local system
dirname(faahko_sub) <- system.file("cdf/KO/", package = "faahKO")

## Perform correspondence analysis
xdata <- groupChromPeaks(faahko_sub,
    param = PeakDensityParam(sampleGroup = rep(1, 3)))

## Group features
xdata <- groupFeatures(xdata, param = SimilarRtimeParam(4))
xdata <- groupFeatures(xdata,
    param = AbundanceCorrelationParam(threshold = 0.3))

sort(table(featureGroups(xdata)))

################
## featureGroupSpectra
##

## Get a pseudo spectrum for each feature group
res <- featureGroupSpectra(xdata)
res

## Get a full scan spectrum for a subset of the feature groups
## considering only the subset of the last two samples
res <- featureGroupSpectra(xdata,
    featureGroup = unique(featureGroups(xdata))[1:4],
    FUN = featureGroupFullScan, subset = 2:3)
res

################
## Pseudo Spectrum
##

## Get the pseudo spectrum for one feature group reporting the per-feature
## maximal "maxo" value across samples as the spectrum's intensities
res <- featureGroupPseudoSpectrum(featureGroup = "FG.010.001", xdata,
    fvals = featureValues(xdata, value = "maxo"), intensityFun = max)

intensity(res)
mz(res)

## Get the pseudo spectrum using the values in the one sample with the
## highest total sum of signal ("maxo") for the feature group.
res <- featureGroupPseudoSpectrum(featureGroup = "FG.010.001", xdata,
    fvals = featureValues(xdata, value = "maxo"), n = 1)

intensity(res)
mz(res)


################
## Full Scan Spectrum
##

## Get the full MS1 spectrum from the sample with the highest total signal
## of one specific feature group
res <- featureGroupFullScan(featureGroup = "FG.010.001", xdata,
    fvals = featureValues(xdata, value = "maxo"))

plot(mz(res), intensity(res), type = "h", xlab = "m/z", ylab = "intensity")
## Highlight the peaks for the features of the group.
idx <- which(featureGroups(xdata) == "FG.001.001")
points(x = featureDefinitions(xdata)$mzmed[idx],
    y = rep(0, length(idx)), pch = 4, col = "red")
}
\author{
Johannes Rainer
}
