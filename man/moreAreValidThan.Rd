% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/moreAreValidThan.R
\name{moreAreValidThan}
\alias{moreAreValidThan}
\title{Identify rows with a minimum required proportion of non-missing values}
\usage{
moreAreValidThan(x, f = rep(1, ncol(x)), prop = 0.3, condition = any)
}
\arguments{
\item{x}{\code{numeric} matrix.}

\item{f}{optional \code{factor} defining sample groups (columns) of \code{x}.}

\item{prop}{\code{numeric(1)} defining the minimal required proportion of
non-missing values. Has to be a value between 0 and 1.}

\item{condition}{optional \code{function} to be used as condition. With
\code{condition = any} \code{TRUE} is reported for all rows in which at least
\code{prop} values are non-NA within \emph{any} of the sample groups. With
\code{condition = all} this has to be the case for \emph{all} sample groups.}
}
\value{
\code{logical} vector, same length than \code{nrow(x)}, \code{TRUE} for rows that
pass the criteria.
}
\description{
Helper function to identify rows in \code{x} which have a proportion of
non-missing values (i.e. valid measurements) larger than \code{prop}. Parameter
\code{f} allows to define groups of columns and hence to perform the test
separately in each group. Parameter \code{condiction} allows to combine these
per-group tests to a single \code{logical} value per row, i.e. the default
\code{condition = any} returns \code{TRUE} if in at least one group defined by \code{f} the
proportion of non-missing values is \verb{> prop}. With \code{condition = all} more
than \code{prop} non-missing values have to be present in all groups.
}
\examples{

x <- rbind(
    c(NA, 3, 4, 1, 3, NA, 4, NA),
    c(4, 2, 3, 4, 5, 5, 2, NA),
    c(NA, NA, NA, NA, NA, 3, 4, 5))

## which rows have more than 50\% non-missing values
moreAreValidThan(x, prop = 0.5)

## Same but with a grouping of columns
moreAreValidThan(x, prop = 0.5, f = c(1, 1, 1, 1, 1, 2, 2, 2))

## Same, but require it to be true in all groups
moreAreValidThan(x, prop = 0.5, f = c(1, 1, 1, 1, 1, 2, 2, 2), condition = all)
}
\author{
Johannes Rainer
}
